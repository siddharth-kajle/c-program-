def compute_min_refills(d,m,n,stops):
    stops.sort()
    t=stops[-1]
    left=d-t
    if left>m:
        return -1
    count=0
    if d<=m:
        return 0
    for i in range(n-1):
        if (stops[i+1]-stops[i])>m:
            return -1
        else:
            sk=0
            for k in range(n):
                travel=0
                j=0
                while(travel<=m):
                    travel=(stops[j]-sk )
                   
                    if stops[j]==t:
                        if travel+left>m:
                            return (count+1)
                        else:
                            return count
                    j+=1
                count+=1
                for p in range(j-1):
                    sk=stops.pop(0)
                    
                n=n-j
# def compute_min_refills(d, m,n,s):
#     s.insert(0,0)
#     s.insert(n,d)
#     t=[]
#     for i in range(1,n+2):
#         t.append(s[i]-s[i-1])
#         if s[i]-s[i-1]>m:
#             return -1
# l=0
# c=0
# for i in t:
#     l+=i
#     if i>=m:
#         c+=1
#         l=0
# return c  


        

        

d,m,n=int(input()),int(input()),int(input())
stops= list(map(int,input().split()))
print(compute_min_refills(d, m,n,stops))
